{
	"info": {
		"_postman_id": "705d6beb-de64-4c37-b8fc-d1fa865411c9",
		"name": "Test unitaire",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13908855"
	},
	"item": [
		{
			"name": "Get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Test all users response\", () => {",
							"    let res = pm.response.json();",
							"    pm.expect(res).to.be.a('array');",
							"",
							"    _.each(res, (item) => {",
							"        pm.expect(item._id).to.be.a('number');",
							"        pm.expect(item.name).to.be.a('string');",
							"        pm.expect(item.amount).to.be.a('number');",
							"    });",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/users/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let passed;",
							"const res = pm.response.json();",
							"try {",
							"    pm.response.to.have.status(201);",
							"    passed = true;",
							"} catch (err) {",
							"    passed = false;",
							"}",
							"if (passed) {",
							"    pm.test(\"Test payload - Status 200\", function () {",
							"        pm.expect(res).to.be.a('object');",
							"        pm.expect(res._id).to.be.a('number');",
							"        pm.expect(res.name).to.be.a('string');",
							"        pm.expect(res.amount).to.be.a('number');",
							"    });",
							"}",
							"else {",
							"    pm.test(\"Test payload - Status 500\", function () {",
							"        pm.response.to.have.status(500);",
							"        pm.expect(res.error).to.be.a('string');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"_id\": 50,\n    \"name\": \"John Doe\",\n    \"amount\": 0\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/users/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Credit user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let passed;",
							"const res = pm.response.json();",
							"try {",
							"    pm.response.to.have.status(200);",
							"    passed = true;",
							"} catch (err) {",
							"    passed = false;",
							"}",
							"if (passed) {",
							"    pm.test(\"Test payload - Status 200\", function () {",
							"        pm.expect(res).to.be.a('object');",
							"        pm.expect(res.message).to.be.a('string').contain(\"ok\");",
							"        pm.expect(res.id).to.be.a('number');",
							"        pm.expect(res.credit).to.be.a('number');",
							"        pm.expect(res.newAmount).to.be.a('number');",
							"    });",
							"}",
							"else {",
							"    pm.test(\"Test payload - Status 500\", function () {",
							"        pm.response.to.have.status(500);",
							"        pm.expect(res.error).to.be.a('string');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": {{amount}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/users/1/accounts/credit",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users",
						"1",
						"accounts",
						"credit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Debit user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let passed;",
							"const res = pm.response.json();",
							"try {",
							"    pm.response.to.have.status(200);",
							"    passed = true;",
							"} catch (err) {",
							"    passed = false;",
							"}",
							"if (passed) {",
							"    pm.test(\"Test payload - Status 200\", function () {",
							"        pm.expect(res).to.be.a('object');",
							"        pm.expect(res.message).to.be.a('string').contain(\"ok\");",
							"        pm.expect(res.id).to.be.a('number');",
							"        pm.expect(res.debit).to.be.a('number');",
							"        pm.expect(res.newAmount).to.be.a('number');",
							"    });",
							"}",
							"else {",
							"    pm.test(\"Test payload - Status 500\", function () {",
							"        pm.response.to.have.status(500);",
							"        pm.expect(res.error).to.be.a('string');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"amount\": {{amount}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/users/1/accounts/debit",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users",
						"1",
						"accounts",
						"debit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Test get one user response\", () => {",
							"    let res = pm.response.json();",
							"    pm.expect(res).to.be.a('object');",
							"    pm.expect(res.id).to.be.a('number');",
							"    pm.expect(res.name).to.be.a('string');",
							"    pm.expect(res.amount).to.be.a('number');",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/users/1/accounts/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users",
						"1",
						"accounts",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}